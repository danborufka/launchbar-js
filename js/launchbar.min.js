function apply_shortcut(shortcut, list){ if(shortcut.indexOf('/')>0) { shortcut=shortcut.split('/')[0]; } if(list) while(typeof list[shortcut] === 'string') { shortcut=list[shortcut]; } return shortcut; }; function unique(array){ return array.filter(function(el, index, arr) { return index === arr.indexOf(el); }); }; Function.prototype.delay=function(dly){ var self =this, args =arguments; setTimeout(function() { self.apply(window, Array.prototype.slice.call(args, 1)); }, dly); };if(!(window.hasOwnProperty('LAUNCHBAR') && LAUNCHBAR.loaded)){ var origin =location.origin.replace(new RegExp('^[a-z]+\:\/\/'), '').replace(/\:[0-9]+$/, ''), def ='//danborufka.github.io/cdn/launchbar-js', url = window.hasOwnProperty('LAUNCHBAR') && LAUNCHBAR.hasOwnProperty('options') && LAUNCHBAR.options.hasOwnProperty('base_path')? LAUNCHBAR.options.base_path: false, base_path=location.protocol+(url || def).replace(/^https?\:/, '')+'/', to_load=0; jQuery(document).ready(function($) { var opts=LAUNCHBAR?$.extend(true, {}, LAUNCHBAR.options):null; window.LAUNCHBAR={ load: function(command, base) { var _base=base?base+'.':''; if(LAUNCHBAR.history[_base+command]) { console.info(command, 'already loaded => skipped.'); return LAUNCHBAR; } switch(base) { case 'user': command=LAUNCHBAR.options.user_command_path+command; break; } to_load++; var path=(command.indexOf('/')>0 ? '' : base_path+'commands/')+command; last_loaded_cmd=command; $.getScript(path+'.js', function() { window.LAUNCHBAR.history[_base+command]=true; LAUNCHBAR.utils.init(); }); return LAUNCHBAR; }, install: function(setup) { $.extend(true, LAUNCHBAR, setup); if( setup.commands) { LAUNCHBAR.addSuggestions( Object.keys( setup.commands)); } if( setup.shortcuts) { LAUNCHBAR.addSuggestions( Object.keys( setup.shortcuts)); } return LAUNCHBAR; }, chain: function(setup) { var onClose; LAUNCHBAR.chainlinks =setup.commands; LAUNCHBAR.chaining = true; LAUNCHBAR.dom.$suggestions.detach(); LAUNCHBAR.dom.$chain.empty().appendTo( LAUNCHBAR.dom.core ); $(LAUNCHBAR.dom.input).hide(0).attr('list', 'lb_suggestions_chain').val('').show(0); $.extend(true, LAUNCHBAR.labels, setup.labels); LAUNCHBAR.addSuggestions( Object.keys( setup.commands ), true ); if(LAUNCHBAR.events.hasOwnProperty('onClose')) { onClose=LAUNCHBAR.events.onClose; } LAUNCHBAR.events.onClose=function() { LAUNCHBAR.dom.$chain.detach(); LAUNCHBAR.dom.$suggestions.appendTo( LAUNCHBAR.dom.core ); $(LAUNCHBAR.dom.input).attr('list', 'lb_suggestions'); onClose? LAUNCHBAR.events.onClose=onClose: delete LAUNCHBAR.events.onClose; if(onClose) onClose(); }; return LAUNCHBAR; }, addSuggestions: function(cmd_list, chain) { cmd_list=cmd_list .filter(function(i){ return i.length>1; }) .map(function(val) { if(val.length>1) { var lbl=''; if(LAUNCHBAR.labels[val]) { val +=" ("+LAUNCHBAR.labels[val]+')'; } return "<option value=\""+val+"\" />"; } }); var $suggestions=chain?LAUNCHBAR.dom.$chain:LAUNCHBAR.dom.$suggestions; $suggestions.html( $suggestions.html()+cmd_list.join('') ); return LAUNCHBAR; }, utils: { init: function() { var nextCall=localStorage.getItem("LAUNCHBAR_NEXTTIME_CALL"), list = localStorage.getItem("LAUNCHBAR_COMMANDS"); if(list && list.length) { jQuery.each(list.split(','), function(i, cmd) { LAUNCHBAR.load( cmd ); }); } if(nextCall) { var params =jQuery.parseJSON(nextCall), fn = params.shift(); if(LAUNCHBAR.commands.hasOwnProperty(fn)) { localStorage.removeItem("LAUNCHBAR_NEXTTIME_CALL"); LAUNCHBAR.commands[fn].apply(arguments.caller, params); } else { setTimeout( LAUNCHBAR.utils.init,500 ); } } }, getSelectedText: function() { return (window.getSelection || document.getSelection || document.selection.createRange().text || function(){ return false; })()+''; }, prefill: function( fields) { Object.keys(fields).forEach(function(key) { var $el=$(key === '*'?':input':'#'+key); if( $el.is(':checkbox,:radio')) { $el.prop( 'checked', fields[key] ).parent().addClass('checked'); } else { var val=fields[key]; if(typeof val === 'object') { val=parseInt(val[0]+Math.random()*(val[1]-val[0])); } if( $el.is('select')) { $el.children().eq( val ).prop('selected', true); } else { $el.val( val ); } } }); }, nextTime: function(fn, params) { var args =jQuery.makeArray(arguments), params =[args[1]]; if(args.length>2) { params.push( args[2] ); } params.unshift(fn); localStorage.setItem("LAUNCHBAR_NEXTTIME_CALL", JSON.stringify( params)); }, noNextTime: function(fn, params) { localStorage.removeItem("LAUNCHBAR_NEXTTIME_CALL" ); }, checkUrl: function(url) { if(!url.match(/^[a-z]+\:\/\//)) { return 'http://'+url; } return url; } }, loaded: true, chaining: false, history: {}, shortcuts: {}, labels: {}, options: {}, dom: {}, events: {}, chainlinks: {} }; var last_cmd, last_loaded_cmd, promoted={ commands: {load: LAUNCHBAR.load, install: LAUNCHBAR.install }, labels: { load: 'Load command palette', install: 'Install command palette' } }; if(LAUNCHBAR.options.monkey_version<1.2) { var upd=confirm('There\'s a new Tamper-/Greasemonkey script out. Please update now!'); if(upd) { try{ location.href=srv+'js/Launchbar.user.js'; return false; } catch(e) { }}}; if(!$('#launchbar').length){ $('<div id="launchbar"><input type="text" name="tabtab" id="lb_tabtab" list="lb_suggestions"><datalist id="lb_suggestions"></datalist></div>').prependTo( document.body ); $("<style>").prependTo(document.head).html( "#launchbar{display:none;box-sizing:border-box!important;width:200px;height:36px;margin:0 0 0 -100px!important;padding:6px 13px 9px 6px!important;background:#333;border:2px solid #DDD;border-radius:7px;box-shadow:1px 1px 15px rgba(0,0,0,.2);font-family:Consolas,Arial,sans-serif!important;font-size:11px!important;line-height:11px!important;position:absolute;left:50%;top:40px;z-index:9999999999}#launchbar input{display:inline-block!important;box-sizing:content-box!important;width:100%!important;height:100%!important;padding:0 0 3px 6px!important;margin:0!important;border-radius:1px!important;background:#999;color:#EEE;border:none!important;outline:0!important}#launchbar input::-moz-selection{background:#f7931e;color:#000}#launchbar input::selection{background:#f7931e;color:#000}.lb-highlighted{background:rgba(242, 112, 1, .2);outline:2px solid #f27001;opacity:1!important;}.lb-dimmed{opacity:.3!important;}" ); window.LAUNCHBAR.dom.core='#launchbar'; window.LAUNCHBAR.dom.input='#lb_tabtab'; last_cmd=$(LAUNCHBAR.dom.input).val();} window.LAUNCHBAR.options=opts; window.KEYS={SPACE: 32, TAB: 9, RETURN: 13, ESC: 27 }; if(LAUNCHBAR.options.shortcut){ var shc=window.LAUNCHBAR.options.shortcut; if(typeof shc === 'string') { shc=shc.replace(/\s+/g, '').toLowerCase(); if( shc.indexOf('+')) { shc=shc.split('+'); shc[1]= shc[1].length === 1? shc[1].charCodeAt(): KEYS[shc[1].toUpperCase()]; shc={ modifier: shc[0]+'Key', key: shc[1] }; } else { shc={ key: shc }; } } window.LAUNCHBAR.options.shortcut=shc;}else{ window.LAUNCHBAR.options.shortcut={modifier: 'ctrlKey', key: KEYS.SPACE };} if(LAUNCHBAR.dom.hasOwnProperty('input')){ var has_modifier=LAUNCHBAR.options.shortcut.hasOwnProperty('modifier'), _open_quotes=false; LAUNCHBAR.dom.$suggestions =$('#lb_suggestions'); LAUNCHBAR.dom.$chain =$('<datalist id="lb_suggestions_chain"></datalist>'); LAUNCHBAR.events.close=function() { $(LAUNCHBAR.dom.input).trigger('blur').trigger('blur'); return LAUNCHBAR.events; }; LAUNCHBAR.events.open=function() { var keyOptions={ which: LAUNCHBAR.options.shortcut.key }; if(LAUNCHBAR.options.shortcut['modifier']) { keyOptions[LAUNCHBAR.options.shortcut.modifier]=true; } $(LAUNCHBAR.dom.input).trigger( $.Event( "keyup", keyOptions )); return LAUNCHBAR.events; }; function checkShortcut(e) { return ((has_modifier && e[LAUNCHBAR.options.shortcut.modifier]) || !has_modifier) && e.which === LAUNCHBAR.options.shortcut.key; } $(document) .on('blur', LAUNCHBAR.dom.input, function() { if(LAUNCHBAR.events['onClose']) { if( LAUNCHBAR.events.onClose() === false)return false; }; $(LAUNCHBAR.dom.core).stop().fadeOut(100); $(LAUNCHBAR.dom.input).val( last_cmd ); }) .on('keydown', function(e) { if( checkShortcut( e)) { return false; } }) .on('keyup', function(e) { var $inp=$(LAUNCHBAR.dom.input), caller=(arguments.caller || LAUNCHBAR), cmd='', params=[], input=''; if($(LAUNCHBAR.dom.core).is(':visible')) { switch(e.which) { case KEYS.RETURN: if((input=$inp.val()).length) { input =input .split(/\s+|["\(]([^"\)]+)["\)]/g) .filter(function(val){ return !!val; }); cmd =input.shift().toLowerCase(); params =input.slice(0); } if(params.length) { $.each(params, function(i, val) { if(val && val.length) { switch(val) { case 'true': val=true; break; case 'false': val=false; break; } if(parseInt(val) == val) val=parseInt(val); } params[i]=val; }); }; if( LAUNCHBAR.commands[cmd]) { LAUNCHBAR.commands[cmd]=LAUNCHBAR.commands[ apply_shortcut(cmd, LAUNCHBAR.commands) ]; LAUNCHBAR.commands[cmd].apply( arguments.caller, params ); last_cmd=cmd+''; } else if(console[cmd]) { console[cmd].apply( console, params ); } else if(LAUNCHBAR.commands['*']) { LAUNCHBAR.commands['*'].apply( caller, [cmd].concat(params) ); } else if( LAUNCHBAR.chaining) { if(LAUNCHBAR.chainlinks[cmd]) { LAUNCHBAR.chaining=!!LAUNCHBAR.chainlinks[cmd].apply( caller, params ); } else if(LAUNCHBAR.chainlinks['*']) { LAUNCHBAR.chaining=!!LAUNCHBAR.chainlinks['*'].apply( caller, [cmd].concat(params) ); } } else { alert.delay(200, 'Sorry, command not found!'); } case KEYS.ESC: if(!LAUNCHBAR.chaining) LAUNCHBAR.events.close(); } return false; } else if( checkShortcut( e)) { if(LAUNCHBAR.events['onOpen']) { if( LAUNCHBAR.events.onOpen() === false)return; }; LAUNCHBAR.selectedText=LAUNCHBAR.utils.getSelectedText(); LAUNCHBAR.selectedElement=$(':focus'); $(LAUNCHBAR.dom.core).stop().fadeIn(100); $inp.focus()[0].setSelectionRange(0, $inp[0].value.length); return false; } }) .on('scroll', function () { $(LAUNCHBAR.dom.core).css('top', parseInt($(document).scrollTop())+100); }) .trigger('scroll') .on('change', '#launchbar input', function() { last_cmd=$(LAUNCHBAR.dom.input).val(); }); } LAUNCHBAR.load('default'); LAUNCHBAR.install( promoted ); if(LAUNCHBAR.options.user_command_path && LAUNCHBAR.options.user_command_path.length) { LAUNCHBAR .load('default', 'user') .load(origin, 'user'); } }); }